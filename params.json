{
  "name": "httpc",
  "tagline": "An interactive HTTP Client",
  "body": "# httpc\r\n\r\nAn interactive HTTP Client&mdash;written in [Node.js](https://nodejs.org/en/).\r\n\r\nThis is a small tool I quickly whipped up that allows you to conveniently make HTTP requests. You can only set the request method and message body at the moment but I'll add features as I need them. Feel free to contribute.\r\n\r\n### Features\r\n\r\n  - Uses readline\r\n  - Optional Vi mode\r\n  - Tab completion for request methods and options\r\n  - Persistent path between sessions\r\n\r\n### Getting started\r\n\r\n```bash\r\ngit clone https://github.com/jasonwoodland/httpc.git\r\nnpm install -g ./httpc\r\n```\r\n\r\n### Starting\r\n\r\n```bash\r\n# Start from the last path\r\nhttpc\r\n\r\n# Start from a relative or absolute path\r\nhttpc http://example.net\r\n```\r\n\r\n### Usage\r\n\r\n##### Synopsis\r\n\r\n```bash\r\n# Change the current path\r\nPATH\r\n\r\n# Perform a request, optionally specify a path or any options\r\nMETHOD [PATH] [OPTIONS]\r\n```\r\n\r\n##### Changing the current path\r\n\r\n```bash\r\n# Change path absolute to the domain name\r\n/an/absolute/path\r\n\r\n# Change relative to the current path\r\n../some/relative/path\r\n```\r\n\r\n##### Changing domains\r\n\r\n```bash\r\n//example.net/\r\n\r\n# Change protocols\r\nhttps://example.net/\r\n```\r\n\r\n##### Queries and request data\r\n\r\n```bash\r\n# Setting query parameters\r\n-q version=2 key=\"some value\"\r\n\r\n# Specifying strings in the request body data\r\n-d this=that \"some thing\"=\"some thing else\"\r\n\r\n# Specifying an array (you can use commas or spaces to separate data)\r\n-d numbers=[1, 2, 3] more=[4 5 6]\r\n\r\n# Specifying an object \r\n-d user={name=jason age=20 skills=[apis, \"looking cool\"]}\r\n```\r\n\r\n##### Request methods\r\n\r\n```\r\nGET\r\nPOST\r\nPUT\r\nPATCH\r\nDELETE\r\nOPTIONS\r\nHEAD\r\n```\r\n\r\n##### Request options\r\n\r\n```bash\r\n-b, --body\r\n\tOnly print the response body.\r\n\r\n-h, --header\r\n\tOnly print the response headers.\r\n\r\n-d DATA, --data DATA\r\n\tSpecify request body data to send as a JSON object.\r\n\r\n-q QUERY, --query QUERY\r\n\tSpecify query parameters.\r\n\r\n-D DATA, --persistent-data DATA\r\n\tSpecify request body data to send with every following request which\r\n\tspecifies the -d flag. Useful for sending session data.\r\n\r\n-Q QUERY, --persistent-query QUERY\r\n\tSpecify query parameters to send with every following request which\r\n\tspecifies the -q flag. Useful for sending session data.\r\n\r\n-r, --rm-persistent\r\n\tRemove persistent data and queries sent with requests.\r\n```\r\n\r\n##### Examples\r\n```bash\r\n# Simply perform a GET request on the current path\r\nGET\r\n\r\n# Perform a GET request on a path\r\nGET /some/resource\r\n\r\n# Perform a PUT request with request data\r\nPUT /some/thing --data this=\"that\" array=[1, 2] object={a=b, c=d}\r\n```\r\n\r\n### To do\r\n\r\n  - [ ] Ability to set request headers\r\n  - [ ] Persistent data and queries between sessions\r\n  - [ ] Persistent cookies between sessions\r\n  - [ ] Persistent history\r\n  - [x] An easier way to send JSON in the request message body.\r\n  - [ ] Config file\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}